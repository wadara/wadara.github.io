<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Blog]]></title>
  <link href="http://wadara.github.io/atom.xml" rel="self"/>
  <link href="http://wadara.github.io/"/>
  <updated>2014-05-09T14:10:07+09:00</updated>
  <id>http://wadara.github.io/</id>
  <author>
    <name><![CDATA[wadara]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[猿でも分かるgit入門]]></title>
    <link href="http://wadara.github.io/blog/2014/05/09/git/"/>
    <updated>2014-05-09T12:34:59+09:00</updated>
    <id>http://wadara.github.io/blog/2014/05/09/git</id>
    <content type="html"><![CDATA[<p>猿でも分かるgit 入門を読みました</p>

<h3>rebase -i 使おうと思った</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rebase -i HEAD~~</span></code></pre></td></tr></table></div></figure>


<p>でHEADからHEAD~~までのコミットを一気に編集したりまとめたりできる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>edit 4d5415d hoge
</span><span class='line'>pick 04d42bd fuga
</span><span class='line'>squash b83f67a aaa
</span><span class='line'>pick b33f8c2 bbb</span></code></pre></td></tr></table></div></figure>


<p>edit で編集
squash でまとめる.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>4d5415d   hoge
</span><span class='line'>04d42bd   fuga
</span><span class='line'>b83f67a   aaa
</span><span class='line'>b33f8c2   !squash fu</span></code></pre></td></tr></table></div></figure>


<p>こんな風に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>b33f8c2   squash! fu</span></code></pre></td></tr></table></div></figure>


<p>コミットコメントに !squash とかいとくと</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rebase -i HEAD~~ --autosquash</span></code></pre></td></tr></table></div></figure>


<p>で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pick     4d5415d   hoge
</span><span class='line'>pick     04d42bd   fuga
</span><span class='line'>squash   b33f8c2   squash! fu
</span><span class='line'>pick     b83f67a   aaa</span></code></pre></td></tr></table></div></figure>


<p>squash! の後ろの文字で前方一致検索して 勝手にsquash してくれる</p>

<h3>~と^ の違い</h3>

<p>よく分かってなかった</p>

<p>^2で母</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Webを支える技術を読んだ]]></title>
    <link href="http://wadara.github.io/blog/2014/05/08/web/"/>
    <updated>2014-05-08T11:23:55+09:00</updated>
    <id>http://wadara.github.io/blog/2014/05/08/web</id>
    <content type="html"><![CDATA[<h3>概要</h3>

<p>Restとはなにか.</p>

<p>またweb を構成するURI,HTTP,HTMLといった技術の説明とこれらを用いたrestful なweb
の設計方法について述べられている.</p>

<h3>REST</h3>

<ul>
<li><p>web が成功した理由はREST</p></li>
<li><p>REST = ULCODC$SS</p>

<ul>
<li>Uniform          : インタフェースを固定する</li>
<li>Layered          : システムを階層に分離する</li>
<li>Code on Demand   : プログラムをクライアントにダウンロードして実行する。</li>
<li>Client           : ユーザインタフェースと処理を分離する</li>
<li>Cache            : クライアントとサーバの通信回数と量を減らす</li>
<li>Stateless Server : サーバ側でアプリケーション状態を持たない</li>
</ul>
</li>
</ul>


<p> web サービスを作るときにはこの原則に沿って作るべき</p>

<h3>URI</h3>

<ul>
<li>cool URI</li>
</ul>


<p>cool なURI とは変わらないURI のことである.</p>

<p>またリンク切れ起こしまくるweb はやだし,</p>

<p>システムの実装が変わるたびにURI が変わるような設計はかっこわるい</p>

<p>だめな例としては</p>

<ul>
<li>プログラミング言語に依存した拡張子, パスを含むURI</li>
<li>メソッド名がURIに含まれる</li>
<li>URIにセッションIDが含まれる</li>
</ul>


<p>こんな感じで, とにかくURIはリソースの名前であり, シンプルであるべきだという話だった.</p>

<p>設計のテクニック等も書いてあったので, 実際設計するときは読むべきかとも思った</p>

<p>けどだいたいはフレームワークがやってくれる話だったりする?</p>

<h3>http</h3>

<ul>
<li>http はRest の要素をを実現しているプロトコル</li>
<li>method をきちんと使う</li>
</ul>


<p>httpメソッドのget, post, put, deleteきちんと使い分けできているかという話.</p>

<p>例えばこんな表があるけど,</p>

<table>
<thead>
<tr>
<th> </th>
<th>          </th>
<th> get </th>
<th> post </th>
<th> put </th>
<th> delete </th>
<th> </th>
</tr>
</thead>
<tbody>
<tr>
<td> </td>
<td> 安全性   </td>
<td> o   </td>
<td> x    </td>
<td> x   </td>
<td> x      </td>
<td> </td>
</tr>
<tr>
<td> </td>
<td> べき等性 </td>
<td> o   </td>
<td> x    </td>
<td> o   </td>
<td> o      </td>
<td> </td>
</tr>
</tbody>
</table>


<p>このようなメソッドの仕様をみたさないweb サービスやAPI の設計はしないように気をつけるべきです</p>

<p>（put とdelete がべき等でget が安全なメソッドであるとかいうことはhttpの仕様で定められている)</p>

<p>あとはなんでもかんでもpost でやらないようにしようとか.</p>

<ul>
<li>ステータスコードを理解する</li>
</ul>


<p> ステータスコードの意味を理解して, 正しいステータスコードを返す設計にしましょう</p>

<ul>
<li>ヘッダを使う</li>
</ul>


<p>ヘッダ適当にコピペするもの..ではなく考えて使おう.</p>

<p>キャッシュやkeep alive などパフォーマンスに関わるものもあるし, chunk とか認証も大事.</p>

<h3>html</h3>

<ul>
<li>microformats, Atom, JSON</li>
</ul>


<p> 急にAtom 等が出てきた感じがするけど, この辺は紹介html 関連技術の紹介という感じ</p>

<h3>設計</h3>

<p>最後に郵便番号検索サービスを例にとって具体的な設計の進め方の話がされていた</p>

<ul>
<li>URI よく考えること</li>
<li>http メソッドの選定</li>
<li>トランザクション

<ul>
<li>Restfulに実現するにはトランザクションリソースを使う</li>
<li>post で一気にやる</li>
</ul>
</li>
<li>排他制御</li>
<li>リソースの設計</li>
</ul>


<h3>感想</h3>

<p>この本を読んでおけばweb サービスを構成する基本的な要素について理解する事ができて,
あとは作りながらググるっていうことができるようになりそう.</p>

<p>単純に知らない事もいっぱいあって勉強になったし, RESTの思想の歴史的背景などは読んでいておもしろかった.</p>

<p>URIやhttpメソッドのだめな例に当てはまっているweb サイトは世の中いっぱいある..</p>

<p>そういうものを作らないように心がけよう</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Twada さんの講演]]></title>
    <link href="http://wadara.github.io/blog/2014/05/07/twada/"/>
    <updated>2014-05-07T22:35:48+09:00</updated>
    <id>http://wadara.github.io/blog/2014/05/07/twada</id>
    <content type="html"><![CDATA[<p>エンジニアとしてこの先生きのこるための話</p>

<h3>きのこる本</h3>

<p>きのこる本でも大体半分の人がテストに言及してるのでテストは大事.</p>

<p>なので TDD やりましょうという話が前半</p>

<p>以下箇条書きで覚えていることを</p>

<ul>
<li><p>テストに関する議論はよく炎上する.(dhhの件に触れてた.)</p>

<ul>
<li><p>それはテストの定義がみんなバラバラだから?</p></li>
<li><p>developer test,受け入れ test&hellip;</p></li>
<li><p>TDD は特にdeveloperが安心するため</p></li>
</ul>
</li>
<li><p>TDD サイクル = red green refactor</p>

<ul>
<li>Refactor がなかなかできない. refactor をする時間が取られるプロジェクトはいいプロジェクト</li>
<li>これを黄金の回転で回さないといけない</li>
</ul>
</li>
<li><p>Testで大事なのはrepeatable, independentであること</p>

<ul>
<li>バランスも大事とかいろいろあったけど忘れた</li>
</ul>
</li>
</ul>


<p>後半はエンジニアが一生エンジニアでいるためにはどうするべきかという話</p>

<p>きのこの本18 : 学び続ける姿勢が大事</p>

<ol>
<li> 技術を学ぶのではなく、学び方を学ぶ

<ul>
<li>自分と関連がありそうな事を積極的に触る</li>
<li>好きなものだけやっていてはだめ</li>
<li>technology lader とかgithub で話題のものさがすとか</li>
</ul>
</li>
<li> 英語で学ぶ

<ul>
<li>英語大事</li>
</ul>
</li>
<li> 過去から未来を知る(本を読む)

<ul>
<li>技術の発展は螺旋のようなもので, 繰り返す</li>
<li>繰り返すが過去との差分があるので, 一度経験したものでも再び勉強してみる</li>
<li>老害にならない</li>
</ul>
</li>
<li> blog 等アウトプットをする

<ul>
<li>アウトプットする人のところには情報が集まる</li>
</ul>
</li>
</ol>


<p>本の紹介がいっぱいあった</p>

<ul>
<li>プログラマが知るべき97のこと</li>
<li>sqlアンチパターン</li>
<li>アジャイルサムライ</li>
<li>テスト駆動開発入門</li>
<li>リファクタリング</li>
<li>リーダブルコード</li>
<li>達人プログラマー</li>
<li>clean code</li>
</ul>


<h3>感想</h3>

<p>TDDはQAのためというより, 開発者のためのものだという印象だった.</p>

<p>動くものを作ってリファクタっていうサイクルが大事で、リファクタを安心して行うためにテストがあるよという感じでしょうか.</p>

<p>学び続ける姿勢については、本をとにかく読まなきゃと思った.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[この先生きのこりたいならブログを書け]]></title>
    <link href="http://wadara.github.io/blog/2014/05/07/title/"/>
    <updated>2014-05-07T22:06:48+09:00</updated>
    <id>http://wadara.github.io/blog/2014/05/07/title</id>
    <content type="html"><![CDATA[<p>研修で覚えたことや感想をまとめるためのブログ</p>
]]></content>
  </entry>
  
</feed>
